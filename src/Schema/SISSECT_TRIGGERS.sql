CREATE OR REPLACE TRIGGER TGR_SISSECT_LOG
AFTER INSERT OR UPDATE OR DELETE ON SISSECT
FOR EACH ROW
DECLARE
  LOG_SEQ NUMBER(20);
  LOG_TIMESTAMP TIMESTAMP WITH LOCAL TIME ZONE;
  LOG_ACTION CHAR(1);
  TERM_CODE VARCHAR2(6 CHAR);
  CRN VARCHAR2(5 CHAR);
  SUBJ_CODE VARCHAR2(4 CHAR);
  CRSE_NUMB VARCHAR2(5 CHAR);
  SEQ_NUMB VARCHAR2(3 CHAR);
  TITLE VARCHAR2(30 CHAR);
  CRSE_EFF_TERM VARCHAR2(6 CHAR);
  CRSE_TITLE VARCHAR2(30 CHAR);
  XLST_GROUP VARCHAR2(15 CHAR);
  DEPT_CODE VARCHAR2(4 CHAR);
  COLL_CODE VARCHAR2(2 CHAR);
  TERM_OU_CODE VARCHAR2(50 CHAR);
  COLL_OU_CODE VARCHAR2(50 CHAR);
  DEPT_OU_CODE VARCHAR2(50 CHAR);
  TMPL_OU_CODE VARCHAR2(50 CHAR);
  OFFR_OU_CODE VARCHAR2(50 CHAR);
  SECT_OU_CODE VARCHAR2(50 CHAR);
  ACTIVITY_DATE DATE;
  CREATE_DATE DATE;
  UPDATE_DATE DATE;
BEGIN
  -- Log fields
  LOG_SEQ := SISSECT_LOG_SEQ.NEXTVAL;
  LOG_TIMESTAMP := CURRENT_TIMESTAMP;
  LOG_ACTION := CASE
    WHEN INSERTING THEN 'I'
    WHEN DELETING THEN 'D'
    ELSE 'U'
  END;

  -- Key fields
  TERM_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_TERM_CODE
    ELSE :old.SISSECT_TERM_CODE
  END;
  CRN := CASE
    WHEN INSERTING THEN :new.SISSECT_CRN
    ELSE :old.SISSECT_CRN
  END;

  -- Everything else
  SUBJ_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_SUBJ_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_SUBJ_CODE, 0) != NVL(:new.SISSECT_SUBJ_CODE, 0) THEN :new.SISSECT_SUBJ_CODE
  END;
  CRSE_NUMB := CASE
    WHEN INSERTING THEN :new.SISSECT_CRSE_NUMB
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_CRSE_NUMB, 0) != NVL(:new.SISSECT_CRSE_NUMB, 0) THEN :new.SISSECT_CRSE_NUMB
  END;
  SEQ_NUMB := CASE
    WHEN INSERTING THEN :new.SISSECT_SEQ_NUMB
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_SEQ_NUMB, 0) != NVL(:new.SISSECT_SEQ_NUMB, 0) THEN :new.SISSECT_SEQ_NUMB
  END;
  TITLE := CASE
    WHEN INSERTING THEN :new.SISSECT_TITLE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_TITLE, 0) != NVL(:new.SISSECT_TITLE, 0) THEN :new.SISSECT_TITLE
  END;
  CRSE_EFF_TERM := CASE
    WHEN INSERTING THEN :new.SISSECT_CRSE_EFF_TERM
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_CRSE_EFF_TERM, 0) != NVL(:new.SISSECT_CRSE_EFF_TERM, 0) THEN :new.SISSECT_CRSE_EFF_TERM
  END;
  CRSE_TITLE := CASE
    WHEN INSERTING THEN :new.SISSECT_CRSE_TITLE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_CRSE_TITLE, 0) != NVL(:new.SISSECT_CRSE_TITLE, 0) THEN :new.SISSECT_CRSE_TITLE
  END;
  XLST_GROUP := CASE
    WHEN INSERTING THEN :new.SISSECT_XLST_GROUP
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_XLST_GROUP, 0) != NVL(:new.SISSECT_XLST_GROUP, 0) THEN :new.SISSECT_XLST_GROUP
  END;
  DEPT_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_DEPT_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_DEPT_CODE, 0) != NVL(:new.SISSECT_DEPT_CODE, 0) THEN :new.SISSECT_DEPT_CODE
  END;
  COLL_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_COLL_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_COLL_CODE, 0) != NVL(:new.SISSECT_COLL_CODE, 0) THEN :new.SISSECT_COLL_CODE
  END;
  TERM_OU_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_TERM_OU_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_TERM_OU_CODE, 0) != NVL(:new.SISSECT_TERM_OU_CODE, 0) THEN :new.SISSECT_TERM_OU_CODE
  END;
  DEPT_OU_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_DEPT_OU_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_DEPT_OU_CODE, 0) != NVL(:new.SISSECT_DEPT_OU_CODE, 0) THEN :new.SISSECT_DEPT_OU_CODE
  END;
  TMPL_OU_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_TMPL_OU_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_TMPL_OU_CODE, 0) != NVL(:new.SISSECT_TMPL_OU_CODE, 0) THEN :new.SISSECT_TMPL_OU_CODE
  END;
  OFFR_OU_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_OFFR_OU_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_OFFR_OU_CODE, 0) != NVL(:new.SISSECT_OFFR_OU_CODE, 0) THEN :new.SISSECT_OFFR_OU_CODE
  END;
  SECT_OU_CODE := CASE
    WHEN INSERTING THEN :new.SISSECT_SECT_OU_CODE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_SECT_OU_CODE, 0) != NVL(:new.SISSECT_SECT_OU_CODE, 0) THEN :new.SISSECT_SECT_OU_CODE
  END;
  ACTIVITY_DATE := CASE
    WHEN INSERTING THEN :new.SISSECT_ACTIVITY_DATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_ACTIVITY_DATE, SYSDATE) != NVL(:new.SISSECT_ACTIVITY_DATE, SYSDATE) THEN :new.SISSECT_ACTIVITY_DATE
  END;
  CREATE_DATE := CASE
    WHEN INSERTING THEN :new.SISSECT_CREATE_DATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_CREATE_DATE, SYSDATE) != NVL(:new.SISSECT_CREATE_DATE, SYSDATE) THEN :new.SISSECT_CREATE_DATE
  END;
  UPDATE_DATE := CASE
    WHEN INSERTING THEN :new.SISSECT_UPDATE_DATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SISSECT_UPDATE_DATE, SYSDATE) != NVL(:new.SISSECT_UPDATE_DATE, SYSDATE) THEN :new.SISSECT_UPDATE_DATE
  END;

  -- Create log record
  INSERT INTO SISSECT_LOG
    (
      SISSECT_LOG_SEQ,
      SISSECT_LOG_TIMESTAMP,
      SISSECT_LOG_ACTION,
      SISSECT_TERM_CODE,
      SISSECT_CRN,
      SISSECT_SUBJ_CODE,
      SISSECT_CRSE_NUMB,
      SISSECT_SEQ_NUMB,
      SISSECT_TITLE,
      SISSECT_CRSE_EFF_TERM,
      SISSECT_CRSE_TITLE,
      SISSECT_XLST_GROUP,
      SISSECT_DEPT_CODE,
      SISSECT_COLL_CODE,
      SISSECT_TERM_OU_CODE,
      SISSECT_ACTIVITY_DATE,
      SISSECT_CREATE_DATE,
      SISSECT_UPDATE_DATE
    )
  VALUES
    (
      LOG_SEQ,
      LOG_TIMESTAMP,
      LOG_ACTION,
      TERM_CODE,
      CRN,
      SUBJ_CODE,
      CRSE_NUMB,
      SEQ_NUMB,
      TITLE,
      CRSE_EFF_TERM,
      CRSE_TITLE,
      XLST_GROUP,
      DEPT_CODE,
      COLL_CODE,
      TERM_OU_CODE,
      ACTIVITY_DATE,
      CREATE_DATE,
      UPDATE_DATE
    );
END;
/
QUIT;
/