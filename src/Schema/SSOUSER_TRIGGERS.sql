CREATE OR REPLACE TRIGGER TGR_SSOUSER_LOG
AFTER INSERT OR UPDATE OR DELETE ON SSOUSER
FOR EACH ROW
DECLARE
  LOG_SEQ NUMBER(20);
  LOG_TIMESTAMP TIMESTAMP WITH LOCAL TIME ZONE;
  LOG_ACTION CHAR(1);
  CAMPUS_ID VARCHAR2(30 CHAR);
  EMAIL_ADDRESS VARCHAR2(128 CHAR);
  FIRST_NAME VARCHAR2(128 CHAR);
  LAST_NAME VARCHAR2(128 CHAR);
  ACCOUNT_STATUS VARCHAR2(420 CHAR);
  ACCOUNT_DISABLED NUMBER(1);
  AFFILIATIONS VARCHAR2(120 CHAR);
  IS_STUDENT NUMBER(1);
  IS_FACULTY NUMBER(1);
  IS_STAFF NUMBER(1);
  IS_AFFILIATE NUMBER(1);
  IS_RETIREE NUMBER(1);
  CREATE_DATE TIMESTAMP WITH LOCAL TIME ZONE;
  UPDATE_DATE TIMESTAMP WITH LOCAL TIME ZONE;
  PWD_LAST_SET TIMESTAMP WITH LOCAL TIME ZONE;
BEGIN
  -- Log fields
  LOG_SEQ := SSOUSER_LOG_SEQ.NEXTVAL;
  LOG_TIMESTAMP := CURRENT_TIMESTAMP;
  LOG_ACTION := CASE
    WHEN INSERTING THEN 'I'
    WHEN DELETING THEN 'D'
    ELSE 'U'
  END;

  -- Key fields
  CAMPUS_ID := CASE
    WHEN INSERTING THEN :new.SSOUSER_CAMPUS_ID
    ELSE :old.SSOUSER_CAMPUS_ID
  END;

  -- Everything else
  EMAIL_ADDRESS := CASE
    WHEN INSERTING THEN :new.SSOUSER_EMAIL_ADDRESS
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_EMAIL_ADDRESS, 0) != NVL(:new.SSOUSER_EMAIL_ADDRESS, 0) THEN :new.SSOUSER_EMAIL_ADDRESS
  END;
  FIRST_NAME := CASE
    WHEN INSERTING THEN :new.SSOUSER_FIRST_NAME
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_FIRST_NAME, 0) != NVL(:new.SSOUSER_FIRST_NAME, 0) THEN :new.SSOUSER_FIRST_NAME
  END;
  LAST_NAME := CASE
    WHEN INSERTING THEN :new.SSOUSER_LAST_NAME
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_LAST_NAME, 0) != NVL(:new.SSOUSER_LAST_NAME, 0) THEN :new.SSOUSER_LAST_NAME
  END;
  ACCOUNT_STATUS := CASE
    WHEN INSERTING THEN :new.SSOUSER_ACCOUNT_STATUS
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_ACCOUNT_STATUS, 0) != NVL(:new.SSOUSER_ACCOUNT_STATUS, 0) THEN :new.SSOUSER_ACCOUNT_STATUS
  END;
  ACCOUNT_DISABLED := CASE
    WHEN INSERTING THEN :new.SSOUSER_ACCOUNT_DISABLED
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_ACCOUNT_DISABLED, 0) != NVL(:new.SSOUSER_ACCOUNT_DISABLED, 0) THEN :new.SSOUSER_ACCOUNT_DISABLED
  END;
  AFFILIATIONS := CASE
    WHEN INSERTING THEN :new.SSOUSER_AFFILIATIONS
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_AFFILIATIONS, 0) != NVL(:new.SSOUSER_AFFILIATIONS, 0) THEN :new.SSOUSER_AFFILIATIONS
  END;
  IS_STUDENT := CASE
    WHEN INSERTING THEN :new.SSOUSER_IS_STUDENT
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_IS_STUDENT, 0) != NVL(:new.SSOUSER_IS_STUDENT, 0) THEN :new.SSOUSER_IS_STUDENT
  END;
  IS_FACULTY := CASE
    WHEN INSERTING THEN :new.SSOUSER_IS_FACULTY
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_IS_FACULTY, 0) != NVL(:new.SSOUSER_IS_FACULTY, 0) THEN :new.SSOUSER_IS_FACULTY
  END;
  IS_STAFF := CASE
    WHEN INSERTING THEN :new.SSOUSER_IS_STAFF
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_IS_STAFF, 0) != NVL(:new.SSOUSER_IS_STAFF, 0) THEN :new.SSOUSER_IS_STAFF
  END;
  IS_AFFILIATE := CASE
    WHEN INSERTING THEN :new.SSOUSER_IS_AFFILIATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_IS_AFFILIATE, 0) != NVL(:new.SSOUSER_IS_AFFILIATE, 0) THEN :new.SSOUSER_IS_AFFILIATE
  END;
  IS_RETIREE := CASE
    WHEN INSERTING THEN :new.SSOUSER_IS_RETIREE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_IS_RETIREE, 0) != NVL(:new.SSOUSER_IS_RETIREE, 0) THEN :new.SSOUSER_IS_RETIREE
  END;
  CREATE_DATE := CASE
    WHEN INSERTING THEN :new.SSOUSER_CREATE_DATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_CREATE_DATE, CURRENT_TIMESTAMP) != NVL(:new.SSOUSER_CREATE_DATE, CURRENT_TIMESTAMP) THEN :new.SSOUSER_CREATE_DATE
  END;
  UPDATE_DATE := CASE
    WHEN INSERTING THEN :new.SSOUSER_UPDATE_DATE
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_UPDATE_DATE, CURRENT_TIMESTAMP) != NVL(:new.SSOUSER_UPDATE_DATE, CURRENT_TIMESTAMP) THEN :new.SSOUSER_UPDATE_DATE
  END;
  PWD_LAST_SET := CASE
    WHEN INSERTING THEN :new.SSOUSER_PWD_LAST_SET
    WHEN DELETING THEN NULL
    WHEN NVL(:old.SSOUSER_PWD_LAST_SET, CURRENT_TIMESTAMP) != NVL(:new.SSOUSER_PWD_LAST_SET, CURRENT_TIMESTAMP) THEN :new.SSOUSER_PWD_LAST_SET
  END;

  -- Create log record
  INSERT INTO SSOUSER_LOG
    (
      SSOUSER_LOG_SEQ,
      SSOUSER_LOG_TIMESTAMP,
      SSOUSER_LOG_ACTION,
      SSOUSER_CAMPUS_ID,
      SSOUSER_EMAIL_ADDRESS,
      SSOUSER_FIRST_NAME,
      SSOUSER_LAST_NAME,
      SSOUSER_ACCOUNT_STATUS,
      SSOUSER_ACCOUNT_DISABLED,
      SSOUSER_AFFILIATIONS,
      SSOUSER_IS_STUDENT,
      SSOUSER_IS_FACULTY,
      SSOUSER_IS_STAFF,
      SSOUSER_IS_AFFILIATE,
      SSOUSER_IS_RETIREE,
      SSOUSER_CREATE_DATE,
      SSOUSER_UPDATE_DATE,
      SSOUSER_PWD_LAST_SET
    )
  VALUES
    (
      LOG_SEQ,
      LOG_TIMESTAMP,
      LOG_ACTION,
      CAMPUS_ID,
      EMAIL_ADDRESS,
      FIRST_NAME,
      LAST_NAME,
      ACCOUNT_STATUS,
      ACCOUNT_DISABLED,
      AFFILIATIONS,
      IS_STUDENT,
      IS_FACULTY,
      IS_STAFF,
      IS_AFFILIATE,
      IS_RETIREE,
      CREATE_DATE,
      UPDATE_DATE,
      PWD_LAST_SET
    );
END;
/
QUIT;
/